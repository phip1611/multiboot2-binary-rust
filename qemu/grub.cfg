# This file is built into the GRUB-Standalone-EFI-file that is used in the
# "run in qemu"-demonstration (run_qemu.sh). It is built into the "memdisk" of grub
# (a poorly documented feature) along with the multiboot2 rust binary.
#
# QEMU boots GRUB and GRUB boots my binary.

set timeout=0
set default=0
# apparently not necessary required, but useful if you are in the GRUB shell
# set root=(memdisk)
# set debug=all

menuentry "Phips Multiboot2-compliant Rust Binary" {
    # These commands are equal to the commands in the GRUB shell
    # PS: I don't know why "insmod multiboot2" is not necessary.. it just works!

    # Test if the file supports Multiboot2 and loads the file into GRUB
    # It gets booted automatically
    multiboot2 /boot/multiboot2-binary.elf
    # multiboot2 /boot/multiboot2-binary.elf --additional command_line --magic passed_via_mbi --cmdline-tag

    # Loads a module for Multiboot2 kernels. A boot module is a BLOB in memory and can for example be some
    # initial ramdisk with essential drivers. The information is passed via the Multiboot2 Information Structure (MBI).
    # /foobar references the (memdisk) of GRUB in this case
    # module2 /foobar/some_boot_module --test cmdline-option

    # not required, unless you type these lines on the GRUB shell
    # boot
}
